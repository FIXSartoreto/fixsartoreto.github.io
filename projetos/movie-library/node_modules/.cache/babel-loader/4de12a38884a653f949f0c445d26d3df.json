{"ast":null,"code":"var _jsxFileName = \"/home/dehsartoreto/Trybe/Projetos/sd-06-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      movie: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    movieAPI.getMovie(id).then(response => this.setState({\n      loading: false,\n      movie: response\n    }));\n  }\n\n  async handleSubmit() {\n    const {\n      id\n    } = this.props.match.params;\n    await movieAPI.deleteMovie(id);\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const {\n      movie,\n      loading\n    } = this.state;\n    const {\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle,\n      id\n    } = movie;\n    if (loading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      className: \"movie-details-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      class: \"movie-card-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"movie-card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, `Title: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"movie-card-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"movie-card-storyline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, `Genre: ${genre}`)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, `Rating: ${rating}`))), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"VOLTAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: '/',\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"DELETAR\"))));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/home/dehsartoreto/Trybe/Projetos/sd-06-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","Link","PropTypes","movieAPI","Loading","MovieDetails","constructor","state","loading","movie","handleSubmit","bind","componentDidMount","id","props","match","params","getMovie","then","response","setState","deleteMovie","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAGA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACnCM,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACAb,IAAAA,QAAQ,CAACc,QAAT,CAAkBJ,EAAlB,EACCK,IADD,CACOC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAChCZ,MAAAA,OAAO,EAAE,KADuB;AAEhCC,MAAAA,KAAK,EAAEU;AAFyB,KAAd,CADpB;AAKD;;AAED,QAAMT,YAAN,GAAqB;AACnB,UAAM;AAAEG,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,UAAMb,QAAQ,CAACkB,WAAT,CAAqBR,EAArB,CAAN;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP;AACA;AAEA,UAAM;AAAEb,MAAAA,KAAF;AAASD,MAAAA;AAAT,QAAqB,KAAKD,KAAhC;AACA,UAAM;AAAEgB,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA,KAA/B;AAAsCC,MAAAA,MAAtC;AAA8CC,MAAAA,QAA9C;AAAwDf,MAAAA;AAAxD,QAA+DJ,KAArE;AAEA,QAAID,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEb,wBACE;AAAK,qBAAY,eAAjB;AAAiC,MAAA,SAAS,EAAC,oBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAG,MAAKiB,SAAU,EAA5C;AAA+C,MAAA,KAAK,EAAC,kBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,UAASF,KAAM,EAAlD,CADF,eAEE;AAAG,MAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC,aAAYK,QAAS,EAA1D,CAFF,eAGE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,cAAaJ,SAAU,EAA7D,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,UAASE,KAAM,EAApB,CAJF,CAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,WAAUC,MAAO,EAAzC,CADA,CARF,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAEd,EAAG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,GAAV;AAAe,MAAA,OAAO,EAAE,KAAKH,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CAbF,CADF,CADF;AAuBD;;AA1DkC;;AA6DrCL,YAAY,CAACwB,SAAb,GAAyB;AACvBd,EAAAA,KAAK,EAAEb,SAAS,CAAC4B,KAAV,CAAgB;AACrBd,IAAAA,MAAM,EAAEd,SAAS,CAAC4B,KAAV,CAAgB;AACtBjB,MAAAA,EAAE,EAAEX,SAAS,CAAC6B;AADQ,KAAhB,EAELC;AAHkB,GAAhB,EAIJA;AALoB,CAAzB;AAQA,eAAe3B,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      movie: {},\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    movieAPI.getMovie(id)\n    .then((response) => this.setState({\n      loading: false,\n      movie: response,\n    }));\n  }\n\n  async handleSubmit() {\n    const { id } = this.props.match.params;\n    await movieAPI.deleteMovie(id);\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n\n    const { movie, loading } = this.state;\n    const { title, storyline, imagePath, genre, rating, subtitle, id } = movie;\n\n    if (loading) return <Loading />;\n\n    return (\n      <div data-testid=\"movie-details\" className=\"movie-details-body\">\n        <div>\n          <section className=\"movie-details\">\n            <img alt=\"Movie Cover\" src={`../${imagePath}`} class=\"movie-card-image\" />\n            <div className=\"movie-card-body\">\n              <h2 className=\"movie-card-title\">{`Title: ${title}`}</h2>\n              <p className=\"movie-card-subtitle\">{`Subtitle: ${subtitle}`}</p>\n              <p className=\"movie-card-storyline\">{`Storyline: ${storyline}`}</p>\n              <p>{`Genre: ${genre}`}</p>\n            </div>\n            <div>\n            <p className=\"rating\">{`Rating: ${rating}`}</p>\n            </div>\n          </section>\n          <section>\n            <Link to={`${id}/edit`}>EDITAR</Link>\n            <Link to={'/'}>VOLTAR</Link>\n            <Link to={'/'} onClick={this.handleSubmit}>DELETAR</Link>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dehsartoreto/Trybe/Projetos/sd-06-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: {}\n    };\n  }\n\n  handleSubmit(updatedMovie) {}\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    movieAPI.getMovie(id).then(response => this.setState({\n      status: 'loaded',\n      movie: response\n    }));\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      // Redirect\n\n      /*#__PURE__*/\n      React.createElement(Redirect, {\n        to: \"/somewhere/else\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      });\n    }\n\n    if (status === 'loading') {// render Loading\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, status === 'loading' ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 35\n      }\n    }) : /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditMovie;","map":{"version":3,"sources":["/home/dehsartoreto/Trybe/Projetos/sd-06-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","MovieForm","Loading","movieAPI","EditMovie","constructor","props","state","handleSubmit","bind","status","shouldRedirect","movie","updatedMovie","componentDidMount","id","match","params","getMovie","then","response","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AAEA,SAAKF,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE,SADG;AAEXC,MAAAA,cAAc,EAAE,KAFL;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDJ,EAAAA,YAAY,CAACK,YAAD,EAAe,CAC1B;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAhC;AACAd,IAAAA,QAAQ,CAACe,QAAT,CAAkBH,EAAlB,EACCI,IADD,CACOC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAChCX,MAAAA,MAAM,EAAE,QADwB;AAEhCE,MAAAA,KAAK,EAAEQ;AAFyB,KAAd,CADpB;AAKD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0BC,MAAAA;AAA1B,QAAoC,KAAKL,KAA/C;;AACA,QAAII,cAAJ,EAAoB;AAClB;;AACA;AAAA,0BAAC,QAAD;AAAU,QAAA,EAAE,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B,CACxB;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,MAAM,KAAK,SAAZ,gBAAyB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,gBACD,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEE,KAAlB;AAAyB,MAAA,QAAQ,EAAE,KAAKJ,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA1C+B;;AA6ClC,eAAeJ,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: {},\n    }\n  }\n\n  handleSubmit(updatedMovie) {\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    movieAPI.getMovie(id)\n    .then((response) => this.setState({\n      status: 'loaded',\n      movie: response,\n    }));\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      // Redirect\n      <Redirect to=\"/somewhere/else\" />\n    }\n\n    if (status === 'loading') {\n      // render Loading\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        {(status === 'loading') ? <Loading /> :\n        <MovieForm movie={movie} onSubmit={this.handleSubmit} />}\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}
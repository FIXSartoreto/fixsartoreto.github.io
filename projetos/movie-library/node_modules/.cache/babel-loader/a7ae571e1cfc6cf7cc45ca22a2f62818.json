{"ast":null,"code":"var _jsxFileName = \"/home/dehsartoreto/Trybe/Projetos/sd-06-project-movie-card-library-crud/src/pages/MovieList.js\";\nimport React, { Component } from 'react';\nimport { MovieCard, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n    this.fetchMovies = this.fetchMovies.bind(this);\n    this.state = {\n      movies: [],\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  async fetchMovies() {\n    this.setState({\n      loading: true\n    }, async () => {\n      const movArray = await movieAPI.getMovies();\n      this.setState({\n        loading: false,\n        movies: movArray\n      });\n    });\n  }\n\n  render() {\n    const {\n      movies,\n      loading\n    } = this.state; // Render Loading here if the request is still happening\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }\n    }) : movies.map(movie => /*#__PURE__*/React.createElement(MovieCard, {\n      key: movie.title,\n      movie: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }\n    })));\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/home/dehsartoreto/Trybe/Projetos/sd-06-project-movie-card-library-crud/src/pages/MovieList.js"],"names":["React","Component","MovieCard","Loading","movieAPI","MovieList","constructor","fetchMovies","bind","state","movies","loading","componentDidMount","setState","movArray","getMovies","render","map","movie","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AAEA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,WAAL;AACD;;AAED,QAAMA,WAAN,GAAoB;AAClB,SAAKM,QAAL,CACE;AAAEF,MAAAA,OAAO,EAAE;AAAX,KADF,EAEE,YAAY;AACV,YAAMG,QAAQ,GAAG,MAAMV,QAAQ,CAACW,SAAT,EAAvB;AACA,WAAKF,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAE,KADG;AAEZD,QAAAA,MAAM,EAAEI;AAFI,OAAd;AAID,KARH;AAUD;;AAGDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,KAAKF,KAAjC,CADO,CAGP;;AAEA,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAiBD,MAAM,CAC5BO,GADsB,CACjBC,KAAD,iBAAW,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAK,CAACC,KAAtB;AAA6B,MAAA,KAAK,EAAED,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,CAD3B,CADF;AAMD;;AAxC+B;;AA2ClC,eAAeb,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { MovieCard, Loading } from '../components';\n\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n    this.fetchMovies = this.fetchMovies.bind(this);\n\n    this.state = {\n      movies: [],\n      loading: false,\n    }\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  async fetchMovies() {\n    this.setState(\n      { loading: true },\n      async () => {\n        const movArray = await movieAPI.getMovies();\n        this.setState({\n          loading: false,\n          movies: movArray,\n        });\n      }\n    );\n  };\n\n\n  render() {\n    const { movies, loading } = this.state;\n\n    // Render Loading here if the request is still happening\n\n    return (\n      <div data-testid=\"movie-list\">\n        {loading ? <Loading /> : movies\n          .map((movie) => <MovieCard key={movie.title} movie={movie} />)}\n      </div>\n    );\n  }\n}\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}
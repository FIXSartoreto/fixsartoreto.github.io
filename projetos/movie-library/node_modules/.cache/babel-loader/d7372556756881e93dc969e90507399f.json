{"ast":null,"code":"var _jsxFileName = \"/home/dehsartoreto/Trybe/Projetos/sd-06-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      movie: {},\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    movieAPI.getMovie(id).then(response => this.setState({\n      loading: false,\n      movie: response\n    }));\n  }\n\n  async handleSubmit(movieDeleted) {\n    await movieAPI.deleteMovie(movieDeleted);\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    const {\n      movie,\n      loading\n    } = this.state;\n    const {\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle,\n      id\n    } = movie;\n    if (redirect) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 22\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, `Title: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, `Rating: ${rating}`)), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"VOLTAR\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"DELETAR\"))));\n  }\n\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    }).isRequired\n  }).isRequired\n};\nexport default MovieDetails;","map":{"version":3,"sources":["/home/dehsartoreto/Trybe/Projetos/sd-06-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","Link","Redirect","PropTypes","movieAPI","Loading","MovieDetails","constructor","state","loading","movie","redirect","componentDidMount","id","props","match","params","getMovie","then","response","setState","handleSubmit","movieDeleted","deleteMovie","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      movie: {},\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    movieAPI.getMovie(id)\n    .then((response) => this.setState({\n      loading: false,\n      movie: response,\n    }));\n  }\n\n  async handleSubmit(movieDeleted) {\n    await movieAPI.deleteMovie(movieDeleted);\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n\n    const { movie, loading } = this.state;\n    const { title, storyline, imagePath, genre, rating, subtitle, id } = movie;\n\n    if (redirect) return <Redirect to=\"/\" />\n\n    return (\n      <div data-testid=\"movie-details\">\n        {(loading) ? <Loading /> :\n        <div>\n          <section>\n            <img alt=\"Movie Cover\" src={`../${imagePath}`} />\n            <h2>{`Title: ${title}`}</h2>\n            <p>{`Subtitle: ${subtitle}`}</p>\n            <p>{`Storyline: ${storyline}`}</p>\n            <p>{`Genre: ${genre}`}</p>\n            <p>{`Rating: ${rating}`}</p>\n          </section>\n          <section>\n            <Link to={`${id}/edit`}>EDITAR</Link>\n            <Link to={'/'}>VOLTAR</Link>\n            <button\n              type=\"button\"\n              onClick={this.handleSubmit}\n            >\n              DELETAR\n            </button>\n          </section>\n        </div>\n        }\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}